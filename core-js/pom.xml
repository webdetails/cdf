<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>pentaho</groupId>
    <artifactId>cdf-plugin</artifactId>
    <version>11.0.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>cdf-core-js</artifactId>
  <version>11.0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <properties>
    <webjars.target.directory>${build.dependenciesDirectory}/META-INF/resources/webjars</webjars.target.directory>
    <js.project.list>ccc,jquery,jquery-ui,fancyapps__fancybox,underscore</js.project.list>
    <karma.legacy.file.config>karma.ci.conf.legacy.js</karma.legacy.file.config>

    <docjs.config.file>jsdoc-cdf.json</docjs.config.file>
    <docjs.config.github.branch>master</docjs.config.github.branch>
    <docjs.config.template.directory>${project.basedir}/src/doc/javascript/template</docjs.config.template.directory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.pentaho.ctools</groupId>
      <artifactId>ccc</artifactId>
      <type>zip</type>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>jquery</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars</groupId>
      <artifactId>jquery-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>fancyapps__fancybox</artifactId>
    </dependency>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>underscore</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <!--
            Prevent plugin execution inherited from parent pom from running.
            Would copy all code of ${build.javascriptSourceDirectory} to the test directory.
            Instead, tests receive the exploded assembly (see below).
            -->
            <id>javascript-test_copy-resources</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <!-- When generating the default output package only do the zip format. -->
          <execution>
            <id>assembly_package</id>
            <configuration>
              <formats>
                <format>zip</format>
              </formats>
            </configuration>
          </execution>

          <!-- Explode assembly to test js dir -->
          <execution>
            <phase>${javascript-test_copy-resources-phase}</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>${basedir}/src/assembly/assembly.xml</descriptor>
              </descriptors>
              <formats>
                <format>dir</format>
              </formats>
              <finalName>test-javascript</finalName>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <appendAssemblyId>false</appendAssemblyId>
              <attach>false</attach>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>javascript-legacy-tests</id>
            <phase>${javascript-test_karma-phase}</phase>
            <goals>
              <goal>karma</goal>
            </goals>
            <configuration>
              <karmaConfPath>${build.javascriptTestConfigDirectory}/${karma.legacy.file.config}</karmaConfPath>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
